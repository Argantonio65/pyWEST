/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 5. september 2011 16:01:11$
 *
 ******************************************************************************/

// Define the equations for the sensor output for the ASM1 models

  interface.DO = state.C[S_O];
  
  interface.NH4 = state.C[S_NH];
  
  interface.NO3 = state.C[S_NO];
  
  interface.TSS = state.X_TSS ; 
      
  interface.OnlineCOD = ( state.C[S_S] + state.C[S_I] + 
        state.C[X_BH] + state.C[X_BA] + state.C[X_S] 
          + state.C[X_I] + state.C[X_P]); 
          
  
  interface.OfflineBOD = parameters.F_BOD_COD * (state.C[S_S] + state.C[X_S] 
             + (1 - parameters.f_P) * (state.C[X_BH] + state.C[X_BA])) ;
             
             
  interface.OnlineTN = (state.C[S_NO] + state.C[S_NH] + state.C[S_ND] + state.C[X_ND]
     + parameters.i_X_B * (state.C[X_BH] + state.C[X_BA]) 
         + parameters.i_X_P * (state.C[X_P] + state.C[X_I])) ;
         
  interface.OfflineTKN = ( state.C[S_NH] + state.C[S_ND] + state.C[X_ND]
       + parameters.i_X_B * (state.C[X_BH] + state.C[X_BA]) 
         + parameters.i_X_P * (state.C[X_P] + state.C[X_I])) ;
         
  interface.OUR_ASU = IF (state.V == 0)
              THEN 0
              ELSE
     - (state.ConversionTermPerComponent[S_O] / state.V)
     + parameters.Stoichiometry[Aeration][S_O] * state.Kinetics[Aeration];

  interface.NUR = IF (state.V == 0)
              THEN 0
              ELSE
     - (state.ConversionTermPerComponent[S_NO] / state.V)
     + parameters.Stoichiometry[AerGrowthAuto][S_NO] * state.Kinetics[AerGrowthAuto];
   
  interface.NPR = IF (state.V == 0)
              THEN 0
              ELSE
     parameters.Stoichiometry[AerGrowthAuto][S_NO] * state.Kinetics[AerGrowthAuto];   

  interface.AUR = IF (state.V == 0)
            THEN 0
            ELSE
     - (state.ConversionTermPerComponent[S_NH] / state.V);    
   
  interface.Kla_ASU = state.Kla_Actual;

  interface.V_ASU = state.V;

         
      
  
  

