/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 23. april 2012 08:05:08$
 *
 ******************************************************************************/

#ifndef N_TANKS_FIXVOLUMENINETANK
#define N_TANKS_FIXVOLUMENINETANK

CLASS  FixVolumeNineTank
EXTENDS FixVolumeEightTank WITH
{:

 sub_models <-
 {

  OBJ ASU9 : FixVolumeASU,
 };

 interface <-
 {
  OBJ Kla9 (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Oxygen transfer coefficient in ASU9" : OxygenTransferCoefficient := {: causality <- "CIN" ; value <- 0 ; group <- "Operational" :};   
  OBJ AerationEnergy9 (* terminal = "out_2" *)"Aeration energy for ASU9" : ElectricalEnergy := {: causality <- "COUT"; group <- "Energy" :};
  OBJ MixingEnergy9 (* terminal = "out_2" *)"Mixing energy for ASU9" : ElectricalEnergy := {: causality <- "COUT"; group <- "Energy" :};
#define ASU_NINE_TANK
#include "activated_sludge_unit/wwtp.n_tanks_interface.msl"
#undef ASU_NINE_TANK
 };

 parameters <-  
 {
  OBJ Vol9 (* is_favorite = "1" *) "Volume of ASU9" : Volume := {: value <- 1000 ; group <- "Dimension" :};   
  }; 
 
 coupling <-
 {
  // parameter coupling
  sub_models.ASU9.parameters.Vol.value := parameters.Vol9.value,
 #define ASU_NINE_TANK 
#include"activated_sludge_unit/wwtp.n_tanks_parameters_coupling.msl"
#include "activated_sludge_unit/wwtp.n_tanks_sensor_coupling.msl"
 #undef ASU_NINE_TANK

#if (defined ASM1Temp || defined ASM2dModTemp || defined ASM3Temp || defined ASM3P_EAWAG)
  sub_models.ASU9.parameters.Temp_Ref.value := parameters.Temp_Ref.value,
#endif // ASM1Temp or ASM2dModTemp or ASM3Temp or ASM3P_EAWAG

  // sub-model coupling

  connect(sub_models.ASU8.interface.Outflow, sub_models.ASU9.interface.Inflow),
  connect(interface.Kla9, sub_models.ASU9.interface.Kla),
  connect(sub_models.ASU9.interface.AerationEnergy, interface.AerationEnergy9),
  connect(sub_models.ASU9.interface.MixingEnergy, interface.MixingEnergy9),
#if (defined ASM1Temp || defined ASM2dModTemp || defined ASM3Temp || defined ASM3P_EAWAG)
  connect(interface.Temp, sub_models.ASU9.interface.Temp),
#endif // ASM1Temp or ASM2dModTemp or ASM3Temp or ASM3P_EAWAG

 };
:};

#endif // N_TANKS_FIXVOLUMENINETANK

