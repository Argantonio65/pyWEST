/*******************************************************************************
 *
 * Tornado - Advanced Kernel for Modeling and Virtual Experimentation
 * (c) Copyright 2004-2011 DHI
 *
 * This file is provided under the terms of a license and may not be
 * distributed and/or modified except where allowed by that license.
 *
 * This file is provided as is with no warranty of any kind, including the
 * warranty of design, merchantability and fitness for a particular purpose.
 *
 * $Revision: 1$
 * $Date: 23. marts 2012 12:41:30$
 *
 ******************************************************************************/

#ifndef WWTP_BASE_CONTROLLERS_ONOFFBAND
#define WWTP_BASE_CONTROLLERS_ONOFFBAND

CLASS OnOffBand
  (* icon = "controller_on_off" ; is_default = "true" *)
  "On-off controller with a band"
  SPECIALISES
  PhysicalDAEModelType :=
  {:
    comments <- "A model for an on-off controller";
    interface <-
    {
      OBJ y_M (* terminal = "in_1"; is_favorite = "1" *) "Sensor measured output" : 
               Real := {: causality <- "CIN" ; group <- "Measurement data" :};
      OBJ u (* terminal = "out_1"; is_favorite = "1" *) "Controlled variable" : 
               Real := {: causality <- "COUT" ; group <- "Control action" :};
    OBJ y_Min (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Minimum allowed measured value" : 
         Real := {: causality <- "CIN" ; value <- 1.8  ; group <- "Operational":};
    OBJ y_Max (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Maximum allowed measured value" : 
         Real := {: causality <- "CIN" ; value <- 2.2  ; group <- "Operational":};
    OBJ u_Off (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Output when off" : 
    Real := {: causality <- "CIN" ; value <- 10 ; group <- "Operational" :};
    OBJ u_On  (* terminal = "in_2"; manip = "1"; is_favorite = "1" *) "Output when on"  : 
    Real := {: causality <- "CIN" ; value <- 20 ; group <- "Operational" :};
    };

    parameters <-
    {
    };

  independent <- 
  { 
    OBJ t "Time" : Time := {: group <- "Time" :}; 
   };

    state <-
    {
    };

    equations <-
    {
    interface.u = IF(interface.y_M < interface.y_Min)
                  THEN interface.u_On
                  ELSE
                    IF (interface.y_M > interface.y_Max)
                    THEN interface.u_Off
                    ELSE previous(interface.u) ;
   };

 :};

 
#endif // WWTP_BASE_CONTROLLERS_ONOFFBAND

